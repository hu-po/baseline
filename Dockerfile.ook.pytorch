# GPU-only Dockerfile for running vit.py with Keras (PyTorch backend) on CUDA 12.x.
# Targets the x86_64 system in system_ook.md (RTX 4050, CUDA 12.x).

ARG BASE_IMAGE=nvidia/cuda:12.2.2-cudnn8-runtime-ubuntu22.04
FROM ${BASE_IMAGE}

# Set non-interactive frontend and sensible defaults
ENV DEBIAN_FRONTEND=noninteractive \
    MPLBACKEND=Agg \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    KERAS_BACKEND=torch \
    CUDA_VISIBLE_DEVICES=0

WORKDIR /app

# Install Python and system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3.11 python3.11-venv python3.11-distutils python3-pip \
    libglib2.0-0 libsm6 libxext6 libxrender1 curl ca-certificates && \
    rm -rf /var/lib/apt/lists/*

# Ensure `python` points to Python 3.11
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.11 1

# Copy application code
COPY vit.py /app/

# Install Python dependencies (GPU-only)
# - PyTorch with CUDA 12.1 support (compatible with CUDA 12.2)
RUN set -eux; \
    python -m pip install --upgrade pip; \
    # Core libs
    python -m pip install --no-cache-dir numpy matplotlib "keras>=3.0.0" tyro wandb python-dotenv; \
    # PyTorch GPU wheels (CUDA 12.1) - compatible with CUDA 12.2
    python -m pip install --no-cache-dir torch torchvision --index-url https://download.pytorch.org/whl/cu121

# Default command runs the ViT script with PyTorch backend
CMD ["python", "vit.py", "--keras-backend", "torch"]

# Notes:
# - Requires NVIDIA Container Toolkit on host; run with: --gpus all
# - Build: docker build -f Dockerfile.ook.pytorch -t vit:ook-pytorch .
# - Run:   docker run --rm --gpus all -v $PWD:/app -w /app vit:ook-pytorch
# - Override backend: docker run --rm --gpus all -v $PWD:/app -w /app vit:ook-pytorch python vit.py --keras-backend torch
# - The script downloads CIFAR-100 on first run; container needs network access.