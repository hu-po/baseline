# GPU-only Dockerfile for running vit.py with Keras (JAX backend) on CUDA 12.x.
# Targets the x86_64 system in system_ook.md (RTX 4050, CUDA 12.x).

ARG BASE_IMAGE=nvidia/cuda:12.2.2-cudnn8-runtime-ubuntu22.04
FROM ${BASE_IMAGE}

# Set non-interactive frontend and sensible defaults for headless plotting and JAX memory behavior
ENV DEBIAN_FRONTEND=noninteractive \
    MPLBACKEND=Agg \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    XLA_PYTHON_CLIENT_PREALLOCATE=false \
    KERAS_BACKEND=jax \
    JAX_PLATFORM_NAME=gpu

WORKDIR /app

# Install Python and system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3.11 python3.11-venv python3.11-distutils python3-pip \
    libglib2.0-0 libsm6 libxext6 libxrender1 curl ca-certificates && \
    rm -rf /var/lib/apt/lists/*

RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.11 1

COPY vit.py /app/

RUN set -eux; \
    python -m pip install --upgrade pip; \
    python -m pip install --no-cache-dir numpy matplotlib "keras>=3.0.0" tyro wandb python-dotenv; \
    python -m pip install --no-cache-dir "jax[cuda12_pip]==0.4.31" -f https://storage.googleapis.com/jax-releases/jax_cuda_releases.html

CMD ["python", "vit.py"]

# Notes:
# - Requires NVIDIA Container Toolkit on host; run with: --gpus all
# - Build: docker build -f Dockerfile.ook.jax -t vit:ook-jax .
# - Run:   docker run --rm --gpus all -v $PWD:/app -w /app vit:ook-jax
# - The script downloads CIFAR-100 on first run; container needs network access.
